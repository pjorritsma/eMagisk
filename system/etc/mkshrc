# Copyright (c) 2010
#	Thorsten Glaser <t.glaser@tarent.de>
# This file is provided under the same terms as mksh.
#-
# Minimal /system/etc/mkshrc for Android

: ${TERM:=xterm-256color} ${HOME:=$SDCARD} ${MKSH:=<BIN>/bash} ${HOSTNAME:=android}
: ${SHELL:=$MKSH} ${USER=$(getprop ro.product.device)}

if [ -d "/sbin/.magisk/busybox" ]; then
  BBDIR="/sbin/.magisk/busybox"
elif [ -d "/sbin/.core/busybox" ]; then
  BBDIR="/sbin/.core/busybox"
fi

PATH=$BBDIR:$PATH
export TERM HOME MKSH HOSTNAME SHELL USER PATH

# Directories to add to the PATH
directories=("/sbin" "/system/sbin" "/odm/bin" "/vendor/bin" "/vendor/xbin" "/data/adb/modules/ssh/usr/bin")

# Loop through each directory and check/add to PATH
for dir in "${directories[@]}"; do
  # Check if the directory is not in the current $PATH
  if [[ ":$PATH:" != *":$dir:"* ]]; then
    # If not present, add it to the $PATH
    export PATH="$PATH:$dir"
  fi
done

androidVersion=$(getprop ro.build.version.release)
mitm_version="NOT INSTALLED"
pogo_version="NOT INSTALLED"
temperature="$(echo $(($(cat /sys/class/thermal/thermal_zone0/temp) / 1000)))"

get_mitm_pkg() {
    local mitm_pkg
    mitm_pkg=$(busybox ps aux | grep -E -C0 "pokemod|gocheats|sy1vi3" | grep -C0 -v grep | awk -F ' ' '/com.pokemod/{print $NF} /com.sy1vi3/{print $NF} /com.gocheats.launcher/{print $NF}' | grep -E -C0 "gocheats|pokemod|sy1vi3" | sed -e 's/^[0-9]*://' -e 's@:.*@@g' | sort | uniq)
    if [ -z "$mitm_pkg" ]; then
        echo "NOT RUNNING"
    else
        echo "$mitm_pkg"
    fi
}
MITMPKG=$(get_mitm_pkg)

mitmDeviceName="NONAME"
# Check if $MITMPKG contains "aegis"
if echo "$MITMPKG" | grep -q "aegis"; then
    mitmDeviceName=$(cat /data/local/tmp/aegis_config.json | awk -F\" '{print $12}')
# Check if $MITMPKG contains "atlas"
elif echo "$MITMPKG" | grep -q "atlas"; then
    mitmDeviceName=$(cat /data/local/tmp/atlas_config.json | awk -F\" '{print $12}')
elif [ "$MITMPKG" = "com.gocheats.launcher" ]; then
    mitmDeviceName=$(cat /data/local/tmp/config.json | awk -F\" '/device_name/ {print $4}')
else
    if [ -e "/data/local/tmp/atlas_config.json" ]; then
        mitmDeviceName=$(cat /data/local/tmp/atlas_config.json | awk -F\" '{print $12}')
    else
        echo "MITMPKG is NOT RUNNING, and /data/local/tmp/atlas_config.json does not exist."
    fi
fi

if (( USER_ID )); then PS1='$'; else PS1='#'; fi
PS4='[$EPOCHREALTIME] '; PS1='${|
        local e=$?
        (( e )) && REPLY+="$e|"
		return $e
}$mitmDeviceName:${PWD:-?} '"$PS1 "

POGOPKG=com.nianticlabs.pokemongo
pogo_version="$(dumpsys package com.nianticlabs.pokemongo | awk -F "=" '/versionName/ {print $2}')"

if [ "$MITMPKG" != "NOT RUNNING" ]; then
    mitm_version="$(dumpsys package "$MITMPKG" | awk -F "=" '/versionName/ {print $2}')"
    echo "Android $androidVersion. Pogo: $pogo_version. mitm: $MITMPKG ($mitm_version)"
else
    echo "Android $androidVersion. Pogo: $pogo_version. mitm: $MITMPKG"
fi

if [ -e "/data/local/tmp/aegis.log" ]; then
    no_license=$(busybox tail -n150 "/data/local/tmp/aegis.log" | grep 'Not licensed' | wc -l)
    busybox tail "/data/local/tmp/aegis.log"
elif [ -e "/data/local/tmp/atlas.log" ]; then
    no_license=$(busybox tail -n150 "/data/local/tmp/atlas.log" | grep 'Not licensed' | wc -l)
    busybox tail "/data/local/tmp/atlas.log"
elif [ "$MITMPKG" = "com.gocheats.launcher" ]; then
    logcat_output=$(busybox logcat -d | grep 'GoCheats')
    echo "$logcat_output"
fi

# Check if $no_license is not zero
if [ "$no_license" -ne 0 ]; then
  RED='\033[0;31m' # ANSI color code for red
  NC='\033[0m'     # ANSI color code to reset color

  echo -e "${RED}WARNING: This device has no license${NC}"
  echo -e "${RED}   / \\${NC}"
  echo -e "${RED}  / ! \\${NC}"
  echo -e "${RED} /_____\\${NC}"
fi

cd /data/local/tmp/

mitm_stop() {
        am force-stop $POGOPKG
        killall $POGOPKG
        if [ $MITMPKG = "com.gocheats.launcher" ]; then
                am force-stop $MITMPKG
        elif [ $MITMPKG = "com.pokemod.aegis" ]; then
                am stopservice $MITMPKG/com.pokemod.aegis.services.MappingService
                am force-stop $MITMPKG
        else
                am stopservice $MITMPKG/com.pokemod.atlas.services.MappingService
                am force-stop $MITMPKG
        fi
}

mitm_start() {
        killall $POGOPKG
        if [ $MITMPKG = "package:com.gocheats.launcher" ]; then
                monkey -p $MITMPKG 1
        elif [ $MITMPKG = "com.pokemod.aegis" ]; then
                am startservice $MITMPKG/com.pokemod.aegis.services.MappingService
        else
                am startservice $MITMPKG/com.pokemod.atlas.services.MappingService
        fi
}

mitm_restart() {
    mitm_stop
    sleep 5
    mitm_start
}

exec env HOME=<SDCARD> <BIN>/bash --rcfile <SDCARD>/.bashrc
